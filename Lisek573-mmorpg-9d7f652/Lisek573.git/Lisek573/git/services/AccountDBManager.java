package Lisek573.git.services;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import Lisek573.git.mainthings.Account;

public class AccountDBManager {

	private Connection conn;
	private Statement stmt;
	private PreparedStatement addAccountStmt;
	private PreparedStatement getAccountStmt;
	private PreparedStatement findAccountStmt;
	public PreparedStatement deleteAccountStmt;

	public AccountDBManager() {
		try {
			conn = DriverManager
					.getConnection("jdbc:hsqldb:hsql://localhost/workdb");

			stmt = conn.createStatement();
			boolean AccountTableExists = false;

			ResultSet rs = conn.getMetaData().getTables(null, null, null, null);

			while (rs.next()) {
				if ("Account".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
					AccountTableExists = true;
					break;
				}
			}

			if (!AccountTableExists) {
				stmt.executeUpdate(""
						+ "CREATE TABLE Account("
						+ "id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,"
						+ "name varchar(20)," + "" + ")");
			}

			addAccountStmt = conn.prepareStatement(""
					+ "INSERT INTO Account (name) VALUES (?)" + "");

			getAccountStmt = conn.prepareStatement("" + "SELECT * FROM Account"
					+ "");

			deleteAccountStmt = conn.prepareStatement(""
					+ "DELETE FROM Account" + "");

			findAccountStmt = conn
					.prepareStatement("SELECT id FROM Account WHERE name = ?");

		} catch (SQLException e) {

			e.printStackTrace();
		}
	}

	public void addAccount(Account p) {
		try {
			addAccountStmt.setString(1, p.getSurname());

			addAccountStmt.executeUpdate();

		} catch (SQLException e) {

			e.printStackTrace();
		}

	}

	public List<Account> getAllAccounts() {
		List<Account> Accounts = new ArrayList<Account>();

		try {
			ResultSet rs = getAccountStmt.executeQuery();

			while (rs.next()) {
				Accounts.add(new Account(rs.getString("name"), rs
						.getString("name"), null));
			}

		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		return Accounts;
	}

	public void clear() throws java.sql.SQLException {
		ResultSet rs = getAccountStmt.executeQuery();
		while (rs.next())
			deleteAccountStmt.executeUpdate();

	}

	public List<Integer> FindAccountByName(String name)
			throws java.sql.SQLException {
		try {
			List<Integer> result = new ArrayList<Integer>();
			findAccountStmt.setString(1, name);
			ResultSet rs = findAccountStmt.executeQuery();
			while (rs.next())
				result.add(rs.getInt("ID"));
			return result;
		} catch (java.sql.SQLException e) {
			e.printStackTrace();
		}
		return null;
	}

	public void deleteAllAccounts() {
		try {
			deleteAccountStmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
}